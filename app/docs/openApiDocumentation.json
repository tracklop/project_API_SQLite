{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "SQLite API Project",
    "description": "SqLite Api Project",
    "termsOfService": "",
    "contact": {
      "name": "Sébastien Gosselin, Hugo Otuszewski, Théo Saelens, Pierre-Emmanuel De Clercq"
    },
    "license": {
      "name": "",
      "url": ""
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Authenticate a member",
        "tags": ["Members"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "allOf": [
                      {
                        "$ref": "#/components/examples/Status404"
                      },
                      {
                        "value": {
                          "details": "test"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/inscription": {
      "post": {
        "summary": "Inscription to a match",
        "tags": ["Matches"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/desinscription": {
      "delete": {
        "summary": "Desinscription to a match",
        "tags": ["Matches"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DesinscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/matches": {
      "put": {
        "summary": "Update one or more matches",
        "tags": ["Matches"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "matches": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Match"
                    }
                  }
                },
                "required": ["matches"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/News": {
      "get": {
        "summary": "Get all news",
        "tags": ["News"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new news",
        "tags": ["News"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Match": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "adversaire": {
            "type": "string",
            "description": "The name of the opposing team."
          },
          "score": {
            "type": "integer",
            "description": "The score of the team."
          },
          "score_adversaire": {
            "type": "integer",
            "description": "The score of the opposing team."
          }
        }
      },
      "MemberMatch": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the member."
          },
          "matchId": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the match."
          }
        },
        "required": ["memberId", "matchId"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InscriptionRequest": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the member."
          },
          "matchId": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the match."
          }
        },
        "required": ["memberId", "matchId"]
      },
      "DesinscriptionRequest": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the member."
          },
          "matchId": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the match."
          }
        },
        "required": ["memberId", "matchId"]
      },
      "Success": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful."
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "mail": {
            "type": "string",
            "description": "The mail of the member."
          },
          "password": {
            "type": "string",
            "description": "The password of the member."
          }
        },
        "required": ["mail", "password"]
      },
      "News": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the news article."
          },
          "title": {
            "type": "string",
            "description": "The title of the news article."
          },
          "content": {
            "type": "string",
            "description": "The content of the news article."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the news article was created."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the news article was last updated."
          }
        }
      },
      "NewsRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the news article."
          },
          "content": {
            "type": "string",
            "description": "The content of the news article."
          }
        },
        "required": ["title", "content"]
      }
    },
    "examples": {
      "Status204": {
        "value": {
          "error": "No Content",
          "details": "The search was successful but there are no results"
        },
        "summary": "No Content"
      },
      "Status400": {
        "value": {
          "error": "Bad Request",
          "details": "The request is invalid"
        },
        "Summary": "Invalid request body"
      },
      "Status404": {
        "value": {
          "error": "Not Found",
          "details": "The requested resource was not found"
        },
        "summary": "Resource not found"
      },
      "InscriptionRequest": {
        "type": "object",
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the match to subscribe to."
          }
        },
        "required": ["matchId"]
      },
      "DesinscriptionRequest": {
        "type": "object",
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the match to unsubscribe from."
          }
        },
        "required": ["matchId"]
      },
      "Success": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A message confirming the success of the request."
          }
        }
      }
    }
  }
}
